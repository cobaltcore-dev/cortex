//go:build !ignore_autogenerated

// Copyright 2025 SAP SE
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CinderSchedulingDecision) DeepCopyInto(out *CinderSchedulingDecision) {
	*out = *in
	if in.StoragePools != nil {
		in, out := &in.StoragePools, &out.StoragePools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Activations != nil {
		in, out := &in.Activations, &out.Activations
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CinderSchedulingDecision.
func (in *CinderSchedulingDecision) DeepCopy() *CinderSchedulingDecision {
	if in == nil {
		return nil
	}
	out := new(CinderSchedulingDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MachineSchedulingDecision) DeepCopyInto(out *MachineSchedulingDecision) {
	*out = *in
	if in.MachinePools != nil {
		in, out := &in.MachinePools, &out.MachinePools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Activations != nil {
		in, out := &in.Activations, &out.Activations
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MachineSchedulingDecision.
func (in *MachineSchedulingDecision) DeepCopy() *MachineSchedulingDecision {
	if in == nil {
		return nil
	}
	out := new(MachineSchedulingDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManilaSchedulingDecision) DeepCopyInto(out *ManilaSchedulingDecision) {
	*out = *in
	if in.StoragePools != nil {
		in, out := &in.StoragePools, &out.StoragePools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Activations != nil {
		in, out := &in.Activations, &out.Activations
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManilaSchedulingDecision.
func (in *ManilaSchedulingDecision) DeepCopy() *ManilaSchedulingDecision {
	if in == nil {
		return nil
	}
	out := new(ManilaSchedulingDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NovaSchedulingDecision) DeepCopyInto(out *NovaSchedulingDecision) {
	*out = *in
	if in.ComputeHosts != nil {
		in, out := &in.ComputeHosts, &out.ComputeHosts
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Activations != nil {
		in, out := &in.Activations, &out.Activations
		*out = make(map[string]float64, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NovaSchedulingDecision.
func (in *NovaSchedulingDecision) DeepCopy() *NovaSchedulingDecision {
	if in == nil {
		return nil
	}
	out := new(NovaSchedulingDecision)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Scheduling) DeepCopyInto(out *Scheduling) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Scheduling.
func (in *Scheduling) DeepCopy() *Scheduling {
	if in == nil {
		return nil
	}
	out := new(Scheduling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Scheduling) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingList) DeepCopyInto(out *SchedulingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Scheduling, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingList.
func (in *SchedulingList) DeepCopy() *SchedulingList {
	if in == nil {
		return nil
	}
	out := new(SchedulingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SchedulingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingSpec) DeepCopyInto(out *SchedulingSpec) {
	*out = *in
	out.PipelineRef = in.PipelineRef
	if in.NovaRaw != nil {
		in, out := &in.NovaRaw, &out.NovaRaw
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.CinderRaw != nil {
		in, out := &in.CinderRaw, &out.CinderRaw
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.ManilaRaw != nil {
		in, out := &in.ManilaRaw, &out.ManilaRaw
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.MachineRef != nil {
		in, out := &in.MachineRef, &out.MachineRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingSpec.
func (in *SchedulingSpec) DeepCopy() *SchedulingSpec {
	if in == nil {
		return nil
	}
	out := new(SchedulingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulingStatus) DeepCopyInto(out *SchedulingStatus) {
	*out = *in
	out.Took = in.Took
	if in.NovaDecision != nil {
		in, out := &in.NovaDecision, &out.NovaDecision
		*out = new(NovaSchedulingDecision)
		(*in).DeepCopyInto(*out)
	}
	if in.CinderDecision != nil {
		in, out := &in.CinderDecision, &out.CinderDecision
		*out = new(CinderSchedulingDecision)
		(*in).DeepCopyInto(*out)
	}
	if in.ManilaDecision != nil {
		in, out := &in.ManilaDecision, &out.ManilaDecision
		*out = new(ManilaSchedulingDecision)
		(*in).DeepCopyInto(*out)
	}
	if in.MachineDecision != nil {
		in, out := &in.MachineDecision, &out.MachineDecision
		*out = new(MachineSchedulingDecision)
		(*in).DeepCopyInto(*out)
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulingStatus.
func (in *SchedulingStatus) DeepCopy() *SchedulingStatus {
	if in == nil {
		return nil
	}
	out := new(SchedulingStatus)
	in.DeepCopyInto(out)
	return out
}
