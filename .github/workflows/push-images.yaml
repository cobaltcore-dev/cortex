# Copyright 2025 SAP SE
# SPDX-License-Identifier: Apache-2.0

name: Build and Push Docker Images
on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: large_runner_16core_64gb
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Only build and push the postgres image if there are changes in the
      # postgres directory.
      - name: Get all changed postgres/ files
        id: changed_postgres_files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            postgres/**
      - name: Docker Meta (Cortex Postgres)
        if: steps.changed_postgres_files.outputs.all_changed_files != ''
        id: meta_cortex_postgres
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-postgres
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest
      - name: Build and Push Cortex Postgres
        if: steps.changed_postgres_files.outputs.all_changed_files != ''
        id: push_cortex_postgres
        uses: docker/build-push-action@v6
        with:
          context: postgres
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_cortex_postgres.outputs.tags }}
          labels: ${{ steps.meta_cortex_postgres.outputs.labels }}
          build-args: |
            GIT_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
      - name: Generate Artifact Attestation for Cortex Postgres
        if: steps.changed_postgres_files.outputs.all_changed_files != ''
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}-postgres
          subject-digest: ${{ steps.push_cortex_postgres.outputs.digest }}
          push-to-registry: true

      # Only build and push the reservations operator image if there are changes
      # in the reservations directory.
      - name: Get all changed reservations/ files
        id: changed_reservations_files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            reservations/**
      - name: Docker Meta (Cortex Reservations)
        if: steps.changed_reservations_files.outputs.all_changed_files != ''
        id: meta_cortex_reservations
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-reservations-operator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest
      - name: Build and Push Cortex Reservations Operator
        if: steps.changed_reservations_files.outputs.all_changed_files != ''
        id: push_cortex_reservations
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_cortex_reservations.outputs.tags }}
          labels: ${{ steps.meta_cortex_reservations.outputs.labels }}
          build-args: |
            GO_MOD_PATH=reservations
            GIT_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
      - name: Generate Artifact Attestation for Cortex Reservations
        if: steps.changed_reservations_files.outputs.all_changed_files != ''
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}-reservations-operator
          subject-digest: ${{ steps.push_cortex_reservations.outputs.digest }}
          push-to-registry: true

      # Only build and push the scheduling image if there are changes
      # in the scheduling directory.
      - name: Get all changed scheduling/ files
        id: changed_scheduling_files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            scheduling/**
      - name: Docker Meta (Cortex Scheduling Operator)
        if: steps.changed_scheduling_files.outputs.all_changed_files != ''
        id: meta_cortex_scheduling
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-scheduling-operator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest
      - name: Build and Push Cortex Scheduling Operator
        if: steps.changed_scheduling_files.outputs.all_changed_files != ''
        id: push_cortex_scheduling
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_cortex_scheduling.outputs.tags }}
          labels: ${{ steps.meta_cortex_scheduling.outputs.labels }}
          build-args: |
            GO_MOD_PATH=scheduling
            GIT_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
      - name: Generate Artifact Attestation for Cortex Scheduling
        if: steps.changed_scheduling_files.outputs.all_changed_files != ''
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}-scheduling-operator
          subject-digest: ${{ steps.push_cortex_scheduling.outputs.digest }}
          push-to-registry: true

      # Only build and push the kpis image if there are changes
      # in the kpis directory.
      - name: Get all changed kpis/ files
        id: changed_kpis_files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            kpis/**
      - name: Docker Meta (Cortex KPIs)
        if: steps.changed_kpis_files.outputs.all_changed_files != ''
        id: meta_cortex_kpis
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-kpis
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest
      - name: Build and Push Cortex KPIs
        if: steps.changed_kpis_files.outputs.all_changed_files != ''
        id: push_cortex_kpis
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_cortex_kpis.outputs.tags }}
          labels: ${{ steps.meta_cortex_kpis.outputs.labels }}
          build-args: |
            GO_MOD_PATH=kpis
            GIT_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
      - name: Generate Artifact Attestation for Cortex KPIs
        if: steps.changed_kpis_files.outputs.all_changed_files != ''
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}-kpis
          subject-digest: ${{ steps.push_cortex_kpis.outputs.digest }}
          push-to-registry: true

      # Only build and push the knowledge operator image if there are changes
      # in the knowledge operator directory.
      - name: Get all changed knowledge/ files
        id: changed_knowledge_files
        uses: tj-actions/changed-files@v47
        with:
          files: |
            knowledge/**
      - name: Docker Meta (Cortex Knowledge Operator)
        if: steps.changed_knowledge_files.outputs.all_changed_files != ''
        id: meta_cortex_knowledge
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-knowledge-operator
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest
      - name: Build and Push Cortex Knowledge Operator
        if: steps.changed_knowledge_files.outputs.all_changed_files != ''
        id: push_cortex_knowledge
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_cortex_knowledge.outputs.tags }}
          labels: ${{ steps.meta_cortex_knowledge.outputs.labels }}
          build-args: |
            GO_MOD_PATH=knowledge
            GIT_TAG=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
      - name: Generate Artifact Attestation for Cortex Knowledge Operator
        if: steps.changed_knowledge_files.outputs.all_changed_files != ''
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}-knowledge-operator
          subject-digest: ${{ steps.push_cortex_knowledge.outputs.digest }}
          push-to-registry: true
