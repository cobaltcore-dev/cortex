// Copyright 2025 SAP SE
// SPDX-License-Identifier: Apache-2.0

package http

import "github.com/cobaltcore-dev/cortex/internal/scheduler/manila/api"

// Host object from the Manila scheduler pipeline.
type ExternalSchedulerHost struct {
	// Name of the Manila share host.
	ShareHost string `json:"host"`
}

// Request generated by the Manila scheduler when calling cortex.
// The request contains a spec of the share to be scheduled, a list of hosts and
// their status, and a map of weights that were calculated by the Manila weigher
// pipeline. Some additional flags are also included.
type ExternalSchedulerRequest struct {
	// TODO: Use a more specific type for the spec.
	Spec any `json:"spec"`
	// Request context from Manila that contains additional meta information.
	Context api.ManilaRequestContext `json:"context"`
	// The share hosts that are available for scheduling.
	Hosts []ExternalSchedulerHost `json:"hosts"`
	// Weights map of share hosts to their weights calculated by the Manila weigher pipeline.
	Weights map[string]float64 `json:"weights"`
}

// Conform to the Request interface.

func (r *ExternalSchedulerRequest) GetSpec() any {
	return r.Spec
}
func (r *ExternalSchedulerRequest) GetContext() api.ManilaRequestContext {
	return r.Context
}
func (r *ExternalSchedulerRequest) GetHosts() []string {
	hosts := make([]string, len(r.Hosts))
	for i, host := range r.Hosts {
		hosts[i] = host.ShareHost
	}
	return hosts
}
func (r *ExternalSchedulerRequest) GetWeights() map[string]float64 {
	return r.Weights
}

// Response generated by cortex for the Manila scheduler.
// Cortex returns an ordered list of hosts that the VM should be scheduled on.
type ExternalSchedulerResponse struct {
	Hosts []string `json:"hosts"`
}
