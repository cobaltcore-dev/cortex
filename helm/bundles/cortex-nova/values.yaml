# Copyright 2025 SAP SE
# SPDX-License-Identifier: Apache-2.0

owner-info:
  enabled: true
  helm-chart-url: "https://github.com/cobaltcore-dev/cortex/helm/bundles/cortex-nova"
  maintainers:
    - "p.matthes@sap.com"
    - "markus.wieland@sap.com"
    - "arno.uhlig@sap.com"
  support-group: "workload-management"
  service: "cortex-nova"

alerts:
  enabled: true
  prometheus: openstack

# SSO certificate to use.
sharedSSOCert: &sharedSSOCert
  # Certificate "public key". (Optional, remove this key if not needed)
  cert: |
    -----BEGIN CERTIFICATE-----
    Your certificate here
    -----END CERTIFICATE-----
  # Certificate private key. (Optional, remove this key if not needed)
  key: |
    -----BEGIN PRIVATE KEY-----
    Your private key here
    -----END PRIVATE KEY
  # Whether the certificate is self-signed.
  # If true, the certificate is not verified.
  selfSigned: "false"

postgres:
  host: cortex-nova-postgresql
  user: postgres
  password: secret
  database: postgres
  port: "5432"

datasources:
  prometheus:
    url: "https://path-to-your-prometheus"
    sso:
      enabled: false
      <<: *sharedSSOCert
  openstack:
    url: "https://path-to-keystone/v3"
    availability: public
    username: openstack-user-with-all-project-read-access
    password: openstack-user-password
    projectName: openstack-project-of-user
    userDomainName: openstack-domain-of-user
    projectDomainName: openstack-domain-of-project-scoped-to
    sso:
      enabled: false
      <<: *sharedSSOCert

# Values shared between all subcharts.
global:
  # Values passed to the service through a configmap.
  conf:
    # Connection parameters for the database where data is stored.
    db:
      # Must match postgresql settings from the cortex-postgres chart.
      host: cortex-nova-postgresql

# Features in early development that are not ready for production yet.
cortex-reservations-operator:
  enabled: false
  # CRDs are deployed in the cortex-crds chart.
  crd: {enable: false}
  # Use this to unambiguate multiple cortex deployments in the same cluster.
  namePrefix: cortex-nova

# Custom configuration for the cortex postgres chart.
cortex-postgres:
  fullnameOverride: cortex-nova-postgresql

# Custom configuration for the cortex core chart.
cortex-alerts:
  fullnameOverride: cortex-nova
  alerts:
    componentPrefix: cortex-nova

cortex-kpis:
  fullnameOverride: cortex-nova-kpis
  service:
    extraLabels:
      app: cortex-nova-kpis # See below, used for the service monitor.
  serviceMonitor:
    matchLabels: # See above, this is used to select the postgresql service.
      app: cortex-nova-kpis
  args: []
  conf:
    kpis:
      # Configuration of KPIs that should be extracted from the synced data.
      #
      # The `name` should correspond to a known KPI extractor plugin.
      plugins:
        # VMware-specific KPIs.
        - name: vmware_host_contention_kpi
        - name: vmware_project_noisiness_kpi
        # SAP specific KPIs.
        - name: sap_host_total_allocatable_capacity_kpi
        - name: sap_host_capacity_kpi
        - name: sap_host_running_vms_kpi
        # Shared KPIs.
        - name: vm_migration_statistics_kpi
        - name: vm_life_span_kpi
        - name: vm_commitments_kpi

cortex-knowledge-operator:
  # CRDs are deployed in the cortex-crds chart.
  crd: {enable: false}
  # Use this to unambiguate multiple cortex deployments in the same cluster.
  namePrefix: cortex-nova
  conf:
    # The operator will only touch CRs with this operator name.
    operator: cortex-nova

cortex-scheduling-operator:
  # CRDs are deployed in the cortex-crds chart.
  crd: {enable: false}
  # Use this to unambiguate multiple cortex deployments in the same cluster.
  namePrefix: cortex-nova
  conf:
    # The operator will only touch CRs with this operator name.
    operator: cortex-nova
    descheduler:
      nova:
        # Configuration of the descheduler that runs periodically to de-schedule
        # VMs based on the configured plugins.
        #
        # The `name` should correspond to a known descheduler plugin.
        plugins:
          - name: avoid_high_steal_pct
            options:
              # Deschedule once vms reach this cpu steal pct over the observed time span.
              maxStealPctOverObservedTimeSpan: 20.0
    scheduler:
      nova:
        # Configuration for the Liquid API.
        liquidAPI:
          # Which hypervisor types should be handled by the commitments
          # acceptance endpoint of the scheduler.
          #
          # Please note that the strings here must match exactly with the
          # `capabilities:hypervisor_type` extra spec in the flavors.
          hypervisors:
            - "QEMU"
            - "CH" # Cloud hypervisor
            # Not supported:
            # - "VMware vCenter Server"
            # - "ironic"

        pipelines:
          # Note: there needs to be at least one pipeline with the name "default".
          - name: default
            # Configuration of scheduler steps that modify the Nova scheduler weights.
            #
            # The `name` should correspond to a known scheduler plugin.
            # Note that all scheduler steps will be executed in parallel. However,
            # the order will be maintained when the weights are applied to the
            # input Nova weights.
            plugins:
              # Binpack hana vmware vms on hana hosts.
              - name: shared_resource_balancing
                alias: vmware_hana_binpacking
                extra:
                  scope:
                    hostSelectors:
                      # Note: due to the vmware spec selector, it is expected that
                      # this step is only executed for VMware hosts.
                      - subject: trait
                        type: infix
                        value: "HANA_EXCLUSIVE"
                        operation: intersection
                    specSelectors:
                      - subject: flavor
                        type: infix
                        value: "hana"
                        action: continue
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  # In this configuration, we only consider the memory usage
                  # after the flavor has been placed.
                  ramAfterEnabled: true
                  ramUtilizedAfterLowerBoundPct: 0
                  ramUtilizedAfterUpperBoundPct: 100
                  ramUtilizedAfterActivationLowerBound: 0.0
                  ramUtilizedAfterActivationUpperBound: 1.0

              # Balance non-hana vmware vms on non-hana hosts.
              # This step only depends on openstack data and is thus available for
              # all vms, regardless of the hypervisor. However, in this configuration
              # we only execute it for VMware vms.
              - name: shared_resource_balancing
                alias: vmware_general_purpose_balancing
                extra:
                  scope:
                    hostSelectors:
                      # Note: due to the vmware spec selector, it is expected that
                      # this step is only executed for VMware hosts. However,
                      # we don't want to balance on HANA exclusive hosts.
                      - subject: trait
                        type: infix
                        value: "HANA_EXCLUSIVE"
                        operation: difference
                    specSelectors:
                      # Don't balance HANA vms.
                      - subject: flavor
                        type: infix
                        value: "hana"
                        action: skip
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  # In this configuration, we only consider the memory usage.
                  ramEnabled: true
                  ramUtilizedLowerBoundPct: 0
                  ramUtilizedUpperBoundPct: 100
                  ramUtilizedActivationLowerBound: 1.0
                  ramUtilizedActivationUpperBound: 0.0

              # Avoid placing vms on hosts with a high CPU contention over a longer
              # period of time. This step depends on vrops metrics and is thus only
              # executed for VMware vms.
              - name: vmware_avoid_long_term_contended_hosts
                extra:
                  scope:
                    specSelectors:
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  avgCPUContentionLowerBound: 0 # pct
                  avgCPUContentionUpperBound: 10 # pct
                  avgCPUContentionActivationLowerBound: 0.0
                  avgCPUContentionActivationUpperBound: -0.75
                  maxCPUContentionLowerBound: 0 # pct
                  maxCPUContentionUpperBound: 10 # pct
                  maxCPUContentionActivationLowerBound: 0.0
                  maxCPUContentionActivationUpperBound: -0.25

              # Avoid placing vms on hosts with a high CPU contention over a shorter
              # period of time. This step depends on vrops metrics and is thus only
              # executed for VMware vms.
              - name: vmware_avoid_short_term_contended_hosts
                extra:
                  scope:
                    specSelectors:
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  avgCPUContentionLowerBound: 0 # pct
                  avgCPUContentionUpperBound: 10 # pct
                  avgCPUContentionActivationLowerBound: 0.0
                  avgCPUContentionActivationUpperBound: -0.75
                  maxCPUContentionLowerBound: 0 # pct
                  maxCPUContentionUpperBound: 10 # pct
                  maxCPUContentionActivationLowerBound: 0.0
                  maxCPUContentionActivationUpperBound: -0.25

          # Pipeline for initial placement of reservations which needs all filters.
          - name: reservations
            # This pipeline needs to preselect all hosts to get a valid placement.
            preselectAllHosts: true

            # Configuration of scheduler steps that modify the Nova scheduler weights.
            #
            # The `name` should correspond to a known scheduler plugin.
            # Note that all scheduler steps will be executed in parallel. However,
            # the order will be maintained when the weights are applied to the
            # input Nova weights.
            plugins:
              # Filters ported from Nova for commitment calculation.
              # See: https://github.com/sapcc/nova for the source of implementation.

              # Filter hosts based on instructions given in the request spec.
              - name: filter_host_instructions
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Only get hosts that have sufficient space for the requested flavor.
              - name: filter_has_enough_capacity
                options:
                  # If reserved space should be locked even for matching requests.
                  # For the reservations pipeline, we don't want to unlock
                  # reserved space, to avoid reservations for the same project
                  # and flavor to overlap.
                  lockReserved: true
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Check if the traits required/forbidden in the flavor extra spec
              # match the host's assigned traits.
              - name: filter_has_requested_traits
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # If requested, only get hosts with accelerators.
              - name: filter_has_accelerators
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Only get hosts in the requested az.
              - name: filter_correct_az
                disabledValidations:
                  sameSubjectNumberInOut: true

              # Only get hosts that are not disabled.
              - name: filter_disabled
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Prefix-match the domain name for external customer domains and
              # filter out hosts that are not intended for external customers.
              - name: filter_external_customer
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true
                options:
                  domainNamePrefixes: ["iaas-"]

              # If requested, only get hosts with packed virtqueues.
              - name: filter_packed_virtqueue
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Lock certain hosts for certain projects, based on the aggregate metadata.
              # Note that hosts without aggregate tenant filter are still accessible.
              - name: filter_project_aggregates
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Check the capabilities of each host and if they match the extra spec
              # provided in the request spec flavor.
              - name: filter_compute_capabilities
                disabledValidations:
                  sameSubjectNumberInOut: true
                  someSubjectsRemain: true

              # Weighers below.

              # Binpack hana vmware vms on hana hosts.
              - name: shared_resource_balancing
                alias: vmware_hana_binpacking
                extra:
                  scope:
                    hostSelectors:
                      # Note: due to the vmware spec selector, it is expected that
                      # this step is only executed for VMware hosts.
                      - subject: trait
                        type: infix
                        value: "HANA_EXCLUSIVE"
                        operation: intersection
                    specSelectors:
                      - subject: flavor
                        type: infix
                        value: "hana"
                        action: continue
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  # In this configuration, we only consider the memory usage
                  # after the flavor has been placed.
                  ramAfterEnabled: true
                  ramUtilizedAfterLowerBoundPct: 0
                  ramUtilizedAfterUpperBoundPct: 100
                  ramUtilizedAfterActivationLowerBound: 0.0
                  ramUtilizedAfterActivationUpperBound: 1.0

              # Balance non-hana vmware vms on non-hana hosts.
              # This step only depends on openstack data and is thus available for
              # all vms, regardless of the hypervisor. However, in this configuration
              # we only execute it for VMware vms.
              - name: shared_resource_balancing
                alias: vmware_general_purpose_balancing
                extra:
                  scope:
                    hostSelectors:
                      # Note: due to the vmware spec selector, it is expected that
                      # this step is only executed for VMware hosts. However,
                      # we don't want to balance on HANA exclusive hosts.
                      - subject: trait
                        type: infix
                        value: "HANA_EXCLUSIVE"
                        operation: difference
                    specSelectors:
                      # Don't balance HANA vms.
                      - subject: flavor
                        type: infix
                        value: "hana"
                        action: skip
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  # In this configuration, we only consider the memory usage.
                  ramEnabled: true
                  ramUtilizedLowerBoundPct: 0
                  ramUtilizedUpperBoundPct: 100
                  ramUtilizedActivationLowerBound: 1.0
                  ramUtilizedActivationUpperBound: 0.0

              # Avoid placing vms on hosts with a high CPU contention over a longer
              # period of time. This step depends on vrops metrics and is thus only
              # executed for VMware vms.
              - name: vmware_avoid_long_term_contended_hosts
                extra:
                  scope:
                    specSelectors:
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  avgCPUContentionLowerBound: 0 # pct
                  avgCPUContentionUpperBound: 10 # pct
                  avgCPUContentionActivationLowerBound: 0.0
                  avgCPUContentionActivationUpperBound: -0.75
                  maxCPUContentionLowerBound: 0 # pct
                  maxCPUContentionUpperBound: 10 # pct
                  maxCPUContentionActivationLowerBound: 0.0
                  maxCPUContentionActivationUpperBound: -0.25

              # Avoid placing vms on hosts with a high CPU contention over a shorter
              # period of time. This step depends on vrops metrics and is thus only
              # executed for VMware vms.
              - name: vmware_avoid_short_term_contended_hosts
                extra:
                  scope:
                    specSelectors:
                      - subject: vmware
                        type: bool
                        value: true
                        action: continue
                options:
                  avgCPUContentionLowerBound: 0 # pct
                  avgCPUContentionUpperBound: 10 # pct
                  avgCPUContentionActivationLowerBound: 0.0
                  avgCPUContentionActivationUpperBound: -0.75
                  maxCPUContentionLowerBound: 0 # pct
                  maxCPUContentionUpperBound: 10 # pct
                  maxCPUContentionActivationLowerBound: 0.0
                  maxCPUContentionActivationUpperBound: -0.25
