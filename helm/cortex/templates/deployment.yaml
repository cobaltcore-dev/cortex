# Copyright 2025 SAP SE
# SPDX-License-Identifier: Apache-2.0

{{- range .Values.modes }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}
  annotations:
    # Roll the service when its configmap or secret change.
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
    checksum/image: "{{ $.Values.image.tag }}"
    kubectl.kubernetes.io/default-container: {{ $.Chart.Name }}-{{ .name }}
  labels:
    app: {{ $.Chart.Name }}-{{ .name }}
    {{- include "cortex.labels" $ | nindent 4 }}
spec:
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      {{- include "cortex.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $.Chart.Name }}-{{ .name }}
        {{- include "cortex.labels" $ | nindent 8 }}
        {{- with $.Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}-{{ .name }}
          args: {{ .args | toJson }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ $.Values.conf.api.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ $.Values.conf.monitoring.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml $.Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: {{ include "cortex.fullname" $ }}-config-volume
              mountPath: /etc/config
            - name: {{ $.Chart.Name }}-secrets-volume
              mountPath: /etc/secrets
              readOnly: true
          {{- with $.Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: {{ include "cortex.fullname" $ }}-config-volume
          configMap:
            name: {{ include "cortex.fullname" $ }}-config
        - name: {{ $.Chart.Name }}-secrets-volume
          secret:
            secretName: {{ include "cortex.fullname" $ }}-secrets
      {{- with $.Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ if $.Capabilities.APIVersions.Has "autoscaling.k8s.io/v1/VerticalPodAutoscaler" -}}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ $.Chart.Name }}-{{ .name }}-vpa
  labels:
    app: {{ $.Chart.Name }}-{{ .name }}
    {{- include "cortex.labels" $ | nindent 4 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: "Deployment"
    name: {{ $.Chart.Name }}-{{ .name }}
  updatePolicy:
    updateMode: "Auto"
    minReplicas: 1
    maxReplicas: 1
  resourcePolicy:
    containerPolicies:
      - containerName: {{ $.Chart.Name }}-{{ .name }}
        mode: "Auto"
        minAllowed:
          cpu: "10m"
          memory: "32Mi"
        maxAllowed:
          cpu: "2"
          memory: "4Gi"
        controlledResources: ["cpu", "memory"]
        controlledValues: "RequestsAndLimits"
{{- end }}
{{- end }}
