# Copyright 2025 SAP SE
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Chart.Name }}-cli
  labels:
    app: {{ $.Chart.Name }}-cli
    {{- include "cortex.labels" $ | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}-cli
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}-cli
        {{- include "cortex.labels" $ | nindent 8 }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $.Chart.Name }}-cli
          command:
            - "/bin/sh"
            - "-c"
            - "echo 'Waiting for commands...' && sleep infinity"
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "cortex.fullname" $ }}-config-volume
              mountPath: /etc/config
            - name: {{ $.Chart.Name }}-secrets-volume
              mountPath: /etc/secrets
              readOnly: true
            {{- with $.Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: {{ include "cortex.fullname" $ }}-config-volume
          configMap:
            name: {{ include "cortex.fullname" $ }}-config
        - name: {{ $.Chart.Name }}-secrets-volume
          secret:
            secretName: {{ include "cortex.fullname" $ }}-secrets
        {{- with $.Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ if $.Capabilities.APIVersions.Has "autoscaling.k8s.io/v1/VerticalPodAutoscaler" -}}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: {{ $.Chart.Name }}-cli
  labels:
    app: {{ $.Chart.Name }}-cli
    {{- include "cortex.labels" $ | nindent 4 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: "Deployment"
    name: {{ $.Chart.Name }}-cli
  updatePolicy:
    updateMode: "Auto"
    minReplicas: 1
    maxReplicas: 1
  resourcePolicy:
    containerPolicies:
      - containerName: {{ $.Chart.Name }}-cli
        mode: "Auto"
        minAllowed:
          cpu: "10m"
          memory: "32Mi"
        maxAllowed:
          cpu: "2"
          memory: "4Gi"
        controlledResources: ["cpu", "memory"]
        controlledValues: "RequestsAndLimits"
{{- end }}