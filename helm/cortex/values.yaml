image:
  repository: cortex
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 250m
    memory: 1024Mi

livenessProbe:
  httpGet:
    path: /metrics
    port: metrics
readinessProbe:
  httpGet:
    path: /metrics
    port: metrics

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

owner-info:
  helm-chart-url: "https://github.com/cobaltcore-dev/cortex/helm/cortex"
  maintainers:
    - "p.matthes@sap.com"
  support-group: "cobaltcore-dev"
  enabled: true

# Modes in which the service should be run.
# Each mode is translated into a separate service and deployment.
modes:
  # Syncer syncs data from external sources into the database(s).
  - name: syncer
    service:
      type: ClusterIP
      metricsPort: 2112
    args: ["syncer"]
    replicas: 1

  # Extractor extracts features from the synced data.
  - name: extractor
    service:
      type: ClusterIP
      metricsPort: 2112
    args: ["extractor"]
    replicas: 1

  # Scheduler exposes the scheduler API and modifies the Nova scheduler weights.
  - name: scheduler
    service:
      type: ClusterIP
      apiPort: 8080
      metricsPort: 2112
    args: ["scheduler"]
    replicas: 2

# Default sso certificate to use for all services.
# The sso certificate values of individual services can be overridden.
sharedSSOCert: &sharedSSOCert
  # Certificate "public key".
  cert: ""
  # Certificate private key.
  certKey: ""
  # Whether the certificate is self-signed.
  # If true, the certificate is not verified.
  selfSigned: false

# Values passed to the service by conf.yaml
conf:
  # Configuration of metrics exported to the /metrics endpoint.
  monitoring:
    # The port to expose the metrics on.
    port: 2112

    # Custom labels added to the exported metrics.
    labels:
      github_org: cobaltcore-dev
      github_repo: cortex

  # Connection parameters for the database where data is stored.
  db:
    host: cortex-postgresql
    port: 5432
    user: postgres
    password: secret
    database: postgres

  # Sync plugins config.
  sync:
    prometheus:
      # Prometheus hosts to consider when syncing the metrics.
      hosts:
        - name: vrops_prometheus
          url: https://path-to-vrops-prometheus
          # Optional, only required if Prometheus is configured with SSO.
          sso: *sharedSSOCert
      # Prometheus metrics to sync into the database.
      # Each metric can be synced from a different Prometheus instance.
      # The `type` parameter should map to a known metric model in the database.
      metrics:
        # VMware-specific metrics.
        - name: vrops_virtualmachine_cpu_demand_ratio
          type: vrops_vm_metric
          prometheusName: vrops_prometheus
        - name: vrops_hostsystem_cpu_contention_percentage
          type: vrops_host_metric
          prometheusName: vrops_prometheus

    openstack:
      # OpenStack objects to sync into the database.
      types:
        - nova_hypervisor
        - nova_server
        # Whether resource providers, traits, and aggregates should be synced.
        # Currently we don't need this datasource, so it is disabled.
        # - placement

      # Authentication/identity service URL for openstack.
      keystoneURL: https://path-to-keystone/v3
      # Compute service URL for openstack.
      novaURL: https://path-to-nova/v2.1
      # Placement service URL for openstack.
      placementURL: https://path-to-placement
      # Optional, only required if OpenStack is configured with SSO.
      sso: *sharedSSOCert

      # OpenStack login credentials also used by the OpenStack CLI.
      username: openstack-user-with-all-project-read-access
      password: openstack-user-password
      projectName: openstack-project-of-user
      userDomainName: openstack-domain-of-user
      projectDomainName: openstack-domain-of-project-scoped-to

  features:
    # Configuration of features that should be extracted from the synced data.
    # Each extractor can specify its own dependencies on other extractors or
    # synced data.
    #
    # The `name` should correspond to a known feature extractor plugin.
    # Note that the order defined here will also be the order in which the
    # extractors are executed. If possible, extractors whose dependencies have
    # been executed will be executed in parallel to speed up the process.
    extractors:
      # VMware-specific extractors.
      - name: vrops_hostsystem_resolver
        dependencies:
          sync:
            prometheus:
              metrics:
                # Any vrops vm metric suffices.
                - vrops_virtualmachine_cpu_demand_ratio
            openstack:
              types:
                - nova_hypervisor
                - nova_server
      - name: vrops_project_noisiness_extractor
        dependencies:
          sync:
            prometheus:
              metrics:
                - vrops_virtualmachine_cpu_demand_ratio
            openstack:
              types:
                - nova_hypervisor
                - nova_server
      - name: vrops_hostsystem_contention_extractor
        dependencies:
          features:
            extractors:
              - vrops_hostsystem_resolver
          sync:
            prometheus:
              metrics:
                - vrops_hostsystem_cpu_contention_percentage

  scheduler:
     # The port to use for the scheduler API.
    port: 8080
    # Whether request bodies should be logged (debugging feature).
    logRequestBodies: false
    # Configuration of scheduler steps that modify the Nova scheduler weights.
    # Each scheduler step can specify its own dependencies on extractors and
    # synced data.
    #
    # The `name` should correspond to a known scheduler plugin.
    # Note that all scheduler steps will be executed in parallel. However,
    # the order will be maintained when the weights are applied to the
    # input Nova weights.
    steps:
      # VMware specific scheduler steps.
      - name: vrops_anti_affinity_noisy_projects
        options:
          avgCPUThreshold: 20
          activationOnHit: -1.0
        dependencies:
          features:
            extractors:
              - vrops_project_noisiness_extractor
      - name: vrops_avoid_contended_hosts
        options:
          avgCPUContentionThreshold: 10
          maxCPUContentionThreshold: 20
          activationOnHit: -1.0
        dependencies:
          features:
            extractors:
              - vrops_hostsystem_contention_extractor
