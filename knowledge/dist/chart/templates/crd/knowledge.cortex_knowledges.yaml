{{- if .Values.crd.enable }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.crd.keep }}
    "helm.sh/resource-policy": keep
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.17.2
  name: knowledges.knowledge.cortex
spec:
  group: knowledge.cortex
  names:
    kind: Knowledge
    listKind: KnowledgeList
    plural: knowledges
    singular: knowledge
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.operator
      name: Operator
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Created
      type: date
    - jsonPath: .status.lastExtracted
      name: Extracted
      type: date
    - jsonPath: .status.took
      name: Took
      type: string
    - jsonPath: .spec.recency
      name: Recency
      type: string
    - jsonPath: .status.rawLength
      name: Features
      type: integer
    - jsonPath: .status.error
      name: Error
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Knowledge is the Schema for the knowledges API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of Knowledge
            properties:
              databaseSecretRef:
                description: |-
                  Database credentials for the database where the knowledge will be stored.

                  Note: this is a legacy feature to stay compatible with the cortex scheduler.
                  Once the scheduler is moved to use the knowledge via CRs only, we can
                  remove this.

                  The secret should contain the following keys:
                  - "username": The database username.
                  - "password": The database password.
                  - "host": The database host.
                  - "port": The database port.
                  - "database": The database name.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              dependencies:
                description: Dependencies required for extracting this knowledge.
                properties:
                  datasources:
                    description: |-
                      Datasources required for extracting this knowledge.
                      If provided, all datasources must have the same database secret reference
                      so the knowledge can be joined across multiple database tables.
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  knowledges:
                    description: Other knowledges this knowledge depends on.
                    items:
                      description: ObjectReference contains enough information to
                        let you inspect or modify the referred object.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                type: object
              description:
                description: A human-readable description of the knowledge to be extracted.
                type: string
              extractor:
                description: The feature extractor to use for extracting this knowledge.
                properties:
                  config:
                    description: Additional configuration for the extractor.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  name:
                    description: The name of the extractor.
                    type: string
                type: object
              operator:
                description: The operator by which this knowledge should be extracted.
                type: string
              recency:
                default: 60s
                description: |-
                  The desired recency of this knowledge, i.e. how old it can be until
                  it needs to be re-extracted.
                type: string
              storeInDatabaseOnly:
                default: false
                description: |-
                  Whether the knowledge should only be stored in the database and not
                  in the CR status.

                  Note: this is a legacy feature. Features should always contain condensed
                  knowledge in the CR status for easy access.
                type: boolean
            required:
            - databaseSecretRef
            - recency
            type: object
          status:
            description: status defines the observed state of Knowledge
            properties:
              error:
                description: If there was an error during the last extraction, it
                  is recorded here.
                type: string
              lastExtracted:
                description: When the knowledge was last successfully extracted.
                format: date-time
                type: string
              raw:
                description: The raw data behind the extracted knowledge, e.g. a list
                  of features.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              rawLength:
                description: The number of features extracted, or 1 if the knowledge
                  is not a list.
                type: integer
              took:
                description: The time it took to perform the last extraction.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end -}}
