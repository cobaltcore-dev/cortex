//go:build !ignore_autogenerated

// Copyright 2025 SAP SE
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CinderDatasource) DeepCopyInto(out *CinderDatasource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CinderDatasource.
func (in *CinderDatasource) DeepCopy() *CinderDatasource {
	if in == nil {
		return nil
	}
	out := new(CinderDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Datasource) DeepCopyInto(out *Datasource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Datasource.
func (in *Datasource) DeepCopy() *Datasource {
	if in == nil {
		return nil
	}
	out := new(Datasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Datasource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasourceList) DeepCopyInto(out *DatasourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Datasource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasourceList.
func (in *DatasourceList) DeepCopy() *DatasourceList {
	if in == nil {
		return nil
	}
	out := new(DatasourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatasourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasourceSpec) DeepCopyInto(out *DatasourceSpec) {
	*out = *in
	out.Prometheus = in.Prometheus
	in.OpenStack.DeepCopyInto(&out.OpenStack)
	out.DatabaseSecretRef = in.DatabaseSecretRef
	if in.SSOSecretRef != nil {
		in, out := &in.SSOSecretRef, &out.SSOSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasourceSpec.
func (in *DatasourceSpec) DeepCopy() *DatasourceSpec {
	if in == nil {
		return nil
	}
	out := new(DatasourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatasourceStatus) DeepCopyInto(out *DatasourceStatus) {
	*out = *in
	in.LastSynced.DeepCopyInto(&out.LastSynced)
	out.Took = in.Took
	in.NextSyncTime.DeepCopyInto(&out.NextSyncTime)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatasourceStatus.
func (in *DatasourceStatus) DeepCopy() *DatasourceStatus {
	if in == nil {
		return nil
	}
	out := new(DatasourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityDatasource) DeepCopyInto(out *IdentityDatasource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityDatasource.
func (in *IdentityDatasource) DeepCopy() *IdentityDatasource {
	if in == nil {
		return nil
	}
	out := new(IdentityDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Knowledge) DeepCopyInto(out *Knowledge) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Knowledge.
func (in *Knowledge) DeepCopy() *Knowledge {
	if in == nil {
		return nil
	}
	out := new(Knowledge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Knowledge) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeDependenciesSpec) DeepCopyInto(out *KnowledgeDependenciesSpec) {
	*out = *in
	if in.Datasources != nil {
		in, out := &in.Datasources, &out.Datasources
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Knowledges != nil {
		in, out := &in.Knowledges, &out.Knowledges
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeDependenciesSpec.
func (in *KnowledgeDependenciesSpec) DeepCopy() *KnowledgeDependenciesSpec {
	if in == nil {
		return nil
	}
	out := new(KnowledgeDependenciesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeExtractorSpec) DeepCopyInto(out *KnowledgeExtractorSpec) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeExtractorSpec.
func (in *KnowledgeExtractorSpec) DeepCopy() *KnowledgeExtractorSpec {
	if in == nil {
		return nil
	}
	out := new(KnowledgeExtractorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeList) DeepCopyInto(out *KnowledgeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Knowledge, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeList.
func (in *KnowledgeList) DeepCopy() *KnowledgeList {
	if in == nil {
		return nil
	}
	out := new(KnowledgeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KnowledgeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeSpec) DeepCopyInto(out *KnowledgeSpec) {
	*out = *in
	in.Extractor.DeepCopyInto(&out.Extractor)
	out.Recency = in.Recency
	in.Dependencies.DeepCopyInto(&out.Dependencies)
	if in.DatabaseSecretRef != nil {
		in, out := &in.DatabaseSecretRef, &out.DatabaseSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeSpec.
func (in *KnowledgeSpec) DeepCopy() *KnowledgeSpec {
	if in == nil {
		return nil
	}
	out := new(KnowledgeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeStatus) DeepCopyInto(out *KnowledgeStatus) {
	*out = *in
	in.LastExtracted.DeepCopyInto(&out.LastExtracted)
	out.Took = in.Took
	in.Raw.DeepCopyInto(&out.Raw)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeStatus.
func (in *KnowledgeStatus) DeepCopy() *KnowledgeStatus {
	if in == nil {
		return nil
	}
	out := new(KnowledgeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimesDatasource) DeepCopyInto(out *LimesDatasource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimesDatasource.
func (in *LimesDatasource) DeepCopy() *LimesDatasource {
	if in == nil {
		return nil
	}
	out := new(LimesDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManilaDatasource) DeepCopyInto(out *ManilaDatasource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManilaDatasource.
func (in *ManilaDatasource) DeepCopy() *ManilaDatasource {
	if in == nil {
		return nil
	}
	out := new(ManilaDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NovaDatasource) DeepCopyInto(out *NovaDatasource) {
	*out = *in
	if in.DeletedServersChangesSinceMinutes != nil {
		in, out := &in.DeletedServersChangesSinceMinutes, &out.DeletedServersChangesSinceMinutes
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NovaDatasource.
func (in *NovaDatasource) DeepCopy() *NovaDatasource {
	if in == nil {
		return nil
	}
	out := new(NovaDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenStackDatasource) DeepCopyInto(out *OpenStackDatasource) {
	*out = *in
	in.Nova.DeepCopyInto(&out.Nova)
	out.Placement = in.Placement
	out.Manila = in.Manila
	out.Identity = in.Identity
	out.Limes = in.Limes
	out.Cinder = in.Cinder
	out.SyncInterval = in.SyncInterval
	out.SecretRef = in.SecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenStackDatasource.
func (in *OpenStackDatasource) DeepCopy() *OpenStackDatasource {
	if in == nil {
		return nil
	}
	out := new(OpenStackDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementDatasource) DeepCopyInto(out *PlacementDatasource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementDatasource.
func (in *PlacementDatasource) DeepCopy() *PlacementDatasource {
	if in == nil {
		return nil
	}
	out := new(PlacementDatasource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusDatasource) DeepCopyInto(out *PrometheusDatasource) {
	*out = *in
	out.TimeRange = in.TimeRange
	out.Interval = in.Interval
	out.Resolution = in.Resolution
	out.SecretRef = in.SecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusDatasource.
func (in *PrometheusDatasource) DeepCopy() *PrometheusDatasource {
	if in == nil {
		return nil
	}
	out := new(PrometheusDatasource)
	in.DeepCopyInto(out)
	return out
}
